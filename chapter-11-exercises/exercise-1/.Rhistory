#11
Haiti_rencent_change <- get_country_change("Haiti",life_exp_df)
print(Haiti_rencent_change)
#12
#This function takes three inputs: two country names (as strings), and a data frame of life expectancies,then
#return a new data frame representing of given two countries life expectancies in 2018,
#and the country's change in life expectancy from 1968 to 2018
compare_countries <- function(country1, country2, data){
country <- c(country1,country2)
country1_2018 <- data[data$country == country1, "X2018"]
country2_2018 <- data[data$country == country2, "X2018"]
X2018 <- c(country1_2018,country2_2018)
country1_change<- data[data$country == country1, "recent_change"]
country2_change<- data[data$country == country2, "recent_change"]
recent_change <- c(country1_change,country2_change)
data.frame(country, X2018, recent_change, stringsAsFactors = FALSE)
}
#13
us_vs_cuba <- compare_countries("United States","Cuba",life_exp_df)
print(us_vs_cuba)
#12
#This function compare_countries takes three inputs: two country names (as strings), and a data frame of life expectanciesl,
#and extract the information from the given data fram
#then return a new data frame representing of given two countries life expectancies in 2018,
#and the country's change in life expectancy from 1968 to 2018
compare_countries <- function(country1, country2, data){
country <- c(country1,country2)
country1_2018 <- data[data$country == country1, "X2018"]
country2_2018 <- data[data$country == country2, "X2018"]
X2018 <- c(country1_2018,country2_2018)
country1_change<- data[data$country == country1, "recent_change"]
country2_change<- data[data$country == country2, "recent_change"]
recent_change <- c(country1_change,country2_change)
data.frame(country, X2018, recent_change, stringsAsFactors = FALSE)
}
#13
us_vs_cuba <- compare_countries("United States","Cuba",life_exp_df)
print(us_vs_cuba)
calc_survival_rate <- function(ticket_class){
selecetd_class <- titanic_df[titanic_df$Class == ticket_class,]
men <- selecetd_class[selecetd_class$Sex == "Male" & selecetd_class$Age == "Adult",]
men_survive_rate <- (sum(men[men$Survived == "Yes","Freq"]))/(sum(men["Freq"]))
women_and_child <- selecetd_class[(selecetd_class$Sex == "Female" &selecetd_class$Age == "Adult")|
(selecetd_class$Age == "Child"),]
womenchild_survive_rate <- (sum(women_and_child[women_and_child$Survived == "Yes","Freq"]))/(sum(women_and_child["Freq"]))
result <- paste("Of", ticket_class, "class", paste(round(men_survive_rate*100) ,"%",sep = ""),"of men survived and",
paste(round(womenchild_survive_rate*100) ,"%",sep = ""), "of women and children survived.")
return(result)
}
#8
print( calc_survival_rate("1st"))
print( calc_survival_rate("2nd"))
print( calc_survival_rate("3rd"))
calc_survival_rate <- function(ticket_class){
selecetd_class <- titanic_df[titanic_df$Class == ticket_class,]
men <- selecetd_class[selecetd_class$Sex == "Male" & selecetd_class$Age == "Adult",]
men_survive_rate <- (sum(men[men$Survived == "Yes","Freq"]))/(sum(men["Freq"]))
women_and_child <- selecetd_class[(selecetd_class$Sex == "Female" &selecetd_class$Age == "Adult")|
(selecetd_class$Age == "Child"),]
womenchild_survive_rate <- (sum(women_and_child[women_and_child$Survived == "Yes","Freq"]))/(sum(women_and_child["Freq"]))
result <- paste("Of", ticket_class, "class,", paste(round(men_survive_rate*100) ,"%",sep = ""),"of men survived and",
paste(round(womenchild_survive_rate*100) ,"%",sep = ""), "of women and children survived.")
return(result)
}
#8
print( calc_survival_rate("1st"))
print( calc_survival_rate("2nd"))
print( calc_survival_rate("3rd"))
calc_survival_rate <- function(ticket_class){
selecetd_class <- titanic_df[titanic_df$Class == ticket_class,]
men <- selecetd_class[selecetd_class$Sex == "Male" & selecetd_class$Age == "Adult",]
men_survive_rate <- (sum(men[men$Survived == "Yes","Freq"]))/(sum(men["Freq"]))
women_and_child <- selecetd_class[(selecetd_class$Sex == "Female" &selecetd_class$Age == "Adult")|
(selecetd_class$Age == "Child"),]
womenchild_survive_rate <- (sum(women_and_child[women_and_child$Survived == "Yes","Freq"]))/(sum(women_and_child["Freq"]))
result <- paste("Of", ticket_class, "class,", paste(round(men_survive_rate*100) ,"%",sep = ""),"of men survived and",
paste(round(womenchild_survive_rate*100) ,"%",sep = ""), "of women and children survived.")
return(result)
}
#8
print( calc_survival_rate("1st"))
calc_survival_rate <- function(ticket_class){
selecetd_class <- titanic_df[titanic_df$Class == ticket_class,]
men <- selecetd_class[selecetd_class$Sex == "Male" & selecetd_class$Age == "Adult",]
print(men)
men_survive_rate <- (sum(men[men$Survived == "Yes","Freq"]))/(sum(men["Freq"]))
women_and_child <- selecetd_class[(selecetd_class$Sex == "Female" &selecetd_class$Age == "Adult")|
(selecetd_class$Age == "Child"),]
womenchild_survive_rate <- (sum(women_and_child[women_and_child$Survived == "Yes","Freq"]))/(sum(women_and_child["Freq"]))
result <- paste("Of", ticket_class, "class,", paste(round(men_survive_rate*100) ,"%",sep = ""),"of men survived and",
paste(round(womenchild_survive_rate*100) ,"%",sep = ""), "of women and children survived.")
return(result)
}
#8
print( calc_survival_rate("1st"))
#1
data("Titanic")
View(Titanic)
#2
print(is.data.frame(Titanic))
data("Titanic")
View(Titanic)
#2
print(is.data.frame(Titanic))
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#4
children <- titanic_df[titanic_df$Age == "Child", ]
print(children)
#5
num_children <- sum(children["Freq"])
print(num_children)
#6
largest_loss <- max(titanic_df[titanic_df$Survived == "No", "Freq"])
most_losses <- titanic_df[titanic_df$Freq == largest_loss,]
print(most_losses)
colnames(ta_grades) <- c("ta","math_grade","spanish_grade")
#7
ta_grades[ ,ncol(ta_grades)+1] = ta_grades$math_grade - ta_grades$spanish_grade > 0
colnames(ta_grades)[ncol(ta_grades)] <- "better_at_math"
#8
print(ta_grades[ta_grades$ta == "Saurav Sawansukha", ])
colnames(ta_grades) <- c("ta","math_grade","spanish_grade")
#7
ta_grades[ ,ncol(ta_grades)+1] = ta_grades$math_grade - ta_grades$spanish_grade > 0
colnames(ta_grades)[ncol(ta_grades)] <- "better_at_math"
#8
print(ta_grades[ta_grades$ta == "Saurav Sawansukha", ])
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
print(ta_grades[ta_grades$ta == "Saurav Sawansukha", ])
print(ta_grades[ta_grades$ta == "Saurav Sawansukha" ])
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom",
"Coco Li","George Zhange","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25 )
#4
ta_grades <- data.frame(
tas,
math_grades,
spanish_grades
)
#5
colnames_string <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),
"rows and", ncol(ta_grades), "cols:", colnames_string)
print(table_description)
#6
colnames(ta_grades) <- c("ta","math_grade","spanish_grade")
#7
ta_grades[ ,ncol(ta_grades)+1] = ta_grades$math_grade - ta_grades$spanish_grade > 0
colnames(ta_grades)[ncol(ta_grades)] <- "better_at_math"
View(ta_grades)
print(ta_grades[ta_grades$ta == "Saurav Sawansukha", ])
print(ta_grades[ta_grades$ta == "Saurav Sawansukha", ])
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom",
"Coco Li","George Zhange","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25 )
#4
ta_grades <- data.frame(
tas,
math_grades,
spanish_grades
)
#5
colnames_string <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),
"rows and", ncol(ta_grades), "cols:", colnames_string)
print(table_description)
#6
colnames(ta_grades) <- c("ta","math_grade","spanish_grade")
#7
ta_grades[ ,ncol(ta_grades)+1] = ta_grades$math_grade - ta_grades$spanish_grade > 0
colnames(ta_grades)[ncol(ta_grades)] <- "better_at_math"
#8
print(ta_grades[ta_grades$ta == "Saurav Sawansukha", ])
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE,])
print(num_better_at_math)
#10
replace_math <- (ta_grades[,"math_grade"]- 4.0 > 0)
replace(ta_grades[,"math_grade"], replace_math, 4.0)
replace_spanish <- (ta_grades[,"spanish_grade"]- 4.0 > 0)
replace(ta_grades[,"spanish_grade"], replace_spanish, 4.0)
#11
write.csv(ta_grades, "data/grade_data.csv", row.names = FALSE)
#################
#### PART 2 #####
#################
#1
data("Titanic")
View(Titanic)
#2
print(is.data.frame(Titanic))
#3
titanic_df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
#4
children <- titanic_df[titanic_df$Age == "Child", ]
print(children)
#5
num_children <- sum(children["Freq"])
print(num_children)
#6
largest_loss <- max(titanic_df[titanic_df$Survived == "No", "Freq"])
most_losses <- titanic_df[titanic_df$Freq == largest_loss,]
print(most_losses)
#7
#Take the ticket_class as input and calculate the survive rate of (adults) men
#and that of the "women and children"within given ticket_class.Then return a sentence that describing
#the calculated survival rate
calc_survival_rate <- function(ticket_class){
selecetd_class <- titanic_df[titanic_df$Class == ticket_class,]
men <- selecetd_class[selecetd_class$Sex == "Male" & selecetd_class$Age == "Adult",]
men_survive_rate <- (sum(men[men$Survived == "Yes","Freq"]))/(sum(men["Freq"]))
women_and_child <- selecetd_class[(selecetd_class$Sex == "Female" &selecetd_class$Age == "Adult")|
(selecetd_class$Age == "Child"),]
womenchild_survive_rate <- (sum(women_and_child[women_and_child$Survived == "Yes","Freq"]))/(sum(women_and_child["Freq"]))
result <- paste("Of", ticket_class, "class,", paste(round(men_survive_rate*100) ,"%",sep = ""),"of men survived and",
paste(round(womenchild_survive_rate*100) ,"%",sep = ""), "of women and children survived.")
return(result)
}
#8
print( calc_survival_rate("1st"))
print( calc_survival_rate("2nd"))
print( calc_survival_rate("3rd"))
#9
#(1) First class group has higher survival rate than third class
#(2)In al three classes, women and child have higher survival rate than male
#################
#### PART 3 #####
#################
#1  The data of this data frame come from a combination of three sources.
#Data in Period 1800-1970 is mainly the compilation from Mattias Lindgren;
#Data in Period 1970-2016 mainly come from Global Burden of Disease Study 2016,which from IHME( Institute for Health Metrics and Evaluation, University of Washington)
#Data in Period 2017-2099 mainly come from UN forecasts from World Population Prospects 2017
#2
life_exp_df <- read.csv("data/life_expectancy_years.csv",stringsAsFactors = FALSE)
View(life_exp_df)
#3
#Take a column vector as input and then calculate and return the mean(average) of given column
get_col_mean <- function(col_vector){
col_mean <- mean(col_vector,na.rm = TRUE)
return(col_mean)
}
#4
yr_2018 <- life_exp_df[,"X2018"]
print( get_col_mean(yr_2018))
#5
world_average <- lapply(life_exp_df[,-1], get_col_mean)
#6
world_change_18 <- world_average[["X2018"]]- world_average[["X1918"]]
print(world_change_18)
#7
diff <- life_exp_df$X2016 - life_exp_df$X1996
life_exp_df[,ncol(life_exp_df)+1] = diff
colnames (life_exp_df)[ncol(life_exp_df)] = "recent_change"
#8
num_small_gain <- nrow(life_exp_df[life_exp_df$recent_change < 1, ])
print(num_small_gain)
#9
most_improved <- life_exp_df[life_exp_df$recent_change == max(life_exp_df$recent_change,na.rm = TRUE),"country"]
print(most_improved)
#10
#This function takes country name and data frame as input,
#calculate and return the country's change in life expectancy from 1968 to 2018
get_country_change <- function(country_name, data){
change <- data[data$country == country_name ,"X2018"] - data[data$country == country_name,"X1968"]
return(change)
}
#11
Haiti_rencent_change <- get_country_change("Haiti",life_exp_df)
print(Haiti_rencent_change)
#12
#This function compare_countries takes three inputs: two country names (as strings), and a data frame of life expectanciesl,
#and extract the information from the given data fram
#then return a new data frame representing of given two countries life expectancies in 2018,
#and the country's change in life expectancy from 1968 to 2018
compare_countries <- function(country1, country2, data){
country <- c(country1,country2)
country1_2018 <- data[data$country == country1, "X2018"]
country2_2018 <- data[data$country == country2, "X2018"]
X2018 <- c(country1_2018,country2_2018)
country1_change<- data[data$country == country1, "recent_change"]
country2_change<- data[data$country == country2, "recent_change"]
recent_change <- c(country1_change,country2_change)
data.frame(country, X2018, recent_change, stringsAsFactors = FALSE)
}
#13
us_vs_cuba <- compare_countries("United States","Cuba",life_exp_df)
print(us_vs_cuba)
#1
tas <- c("Phuong Vu","Yunwei Liang","Yubing Tian","Gavin Sreesangkom",
"Coco Li","George Zhange","Saurav Sawansukha","YuYu Madigan")
#2
math_grades <- rnorm(8, mean = 3.6, sd = 0.4)
#3
spanish_grades <- rnorm(8, mean = 3.8, sd = 0.25 )
#4
ta_grades <- data.frame(
tas,
math_grades,
spanish_grades
)
#5
colnames_string <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),
"rows and", ncol(ta_grades), "cols:", colnames_string)
print(table_description)
#6
colnames(ta_grades) <- c("ta","math_grade","spanish_grade")
setwd("~/Desktop/info201/book-exercises/chapter-11-exercises/exercise-1")
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
View(vehicles)
?unique()
manufacturer <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
print(unique(manuafacturer))
manuafacturer <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
print(unique(manuafacturer))
install.packages(c("devtools", "fueleconomy"))
install.packages(c("devtools", "fueleconomy"))
manuafacturer <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
print(unique(manuafacturer))
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manuafacturer <- select(vehicles, make)
manuafacturer <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
print(length(unique(manuafacturer)))
unique <- length(unique(manuafacturer)))
print(unique)
unique <- length(unique(manuafacturer))
print(unique)
manufactured_in_1997 <- filter(vehicles, yaer == 1997 )
manufactured_in_1997 <- filter(vehicles, year == 1997 )
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
ehicles_1997 <- filter(vehicles, year == 1997 )
#manufactured_in_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
ehicles_in_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
vehicles_in_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
View(vehicles_1997)
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy), ]
vehicles_2wd <- vehicles[vehicles$frive == "2_Wheel Driver", ]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
vehicles_2wd <- vehicles[vehicles$frive == "2_Wheel Driver", ]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
View(vehicles_2wd)
vehicles_2wd <- vehicles[vehicles$drive == "2_Wheel Driver", ]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
View(vehicles_2wd)
vehicles_2wd <- vehicles[vehicles$drive == "2_Wheel Drive", ]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
View(vehicles_2wd)
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy), ]
vehicles_2wd <- vehicles[vehicles$drive == "2-Wheel Drive", ]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
View(vehicles_2wd)
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy), ]
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy), ]
print(worst_vehicles)
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy),"id" ]
print(worst_vehicles)
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy)&
vehicles_2wd$mpg == min(vehicles_2wd$mpg),"id" ]
print(worst_vehicles)
worst_vehicles <-vehicles_2wd[ vehicles_2wd$hwy == min(vehicles_2wd$hwy), "id" ]
print(worst_vehicles)
library("dplyr")
install.packages("tidyverse")
library("dplyr")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
manuafacturer <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique <- length(unique(manuafacturer))
print(unique)
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- filter(vehicles, year == 1997 )
install.packages("pkgconfig")
library("dplyr")
vehicles_1997 <- filter(vehicles, year == 1997 )
setwd("~/Desktop/info201/book-exercises/chapter-11-exercises/exercise-1")
manuafacturer <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique <- length(unique(manuafacturer))
print(unique)
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- filter(vehicles, year == 1997 )
getwd()
library(fueleconomy)
colnames(vehicles)
View(vehicles)
vehicles_1997 <- filter(vehicles, year == 1997 )
setwd("~/Desktop/info201/book-exercises/chapter-11-exercises/exercise-1")
vehicles_1997 <- filter(vehicles, year == 1997 )
data("vehicles")
colnames(vehicles)
View(vehicles)
vehicles_1997 <- filter(vehicles, year == 1997)
unique <- length(unique(manuafacturer))
print(unique)
data("vehicles")
vehicles <- data.frame("vehicles", stringsAsFactors = FALSE)
colnames(vehicles)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manuafacturer <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique <- length(unique(manuafacturer))
print(unique)
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- filter(vehicles, year == 1997)
View(vehicles)
install.packages("pkgconfig")
library("dplyr")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
data("vehicles")
colnames(vehicles)
View(vehicles)
library("dplyr")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
data("vehicles")
colnames(vehicles)
View(vehicles)
vehicles_1997 <- filter(vehicles, year == 1997)
manuafacturer <- select(vehiclesm,make)
manuafacturer <- select(vehicles,make)
manuafacturer <- select(vehicles,make)
library("dplyr")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
data("vehicles")
colnames(vehicles)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manuafacturer <- select(vehicles,make)
#install.packages("pkgconfig")
library("dplyr")
#install.packages("pkgconfig")
library(dplyr)
install.packages("dplyr")
library(dplyr)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
data("vehicles")
colnames(vehicles)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manuafacturer <- select(vehicles,make)
